{"ast":null,"code":"var _jsxFileName = \"/Users/txb/PersonalProject/portfolio/tepy.dev/src/pages/writing/[slug].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Head from 'next/head';\nimport { getPostBySlug, getAllPosts } from '../../../lib/api';\nimport md2html from '../../../lib/md2html';\nimport Layout from '../../components/Layout';\nimport DateFormater from '../../components/DateFormater';\nimport PostBody from '../../components/PostBody';\nimport SocialMeta from '../../components/meta';\nexport default function Post({\n  post\n}) {\n  console.log(post.ogImage);\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, __jsx(SocialMeta, {\n    title: `${post.title} | Tepy Thai's Blog`,\n    image: post.ogImage.url,\n    keywords: `programming journey, tepythai, dev journey, dev story`,\n    description: post.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }), __jsx(\"article\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }\n  }, post.title, \" | Tepy Thai\"), __jsx(\"meta\", {\n    property: \"og:image\",\n    content: post.ogImage.url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }\n  })), __jsx(\"div\", {\n    className: \"max-w-post mx-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, !post.isPublished && __jsx(\"div\", {\n    className: \"text-center bg-red-600 text-white p-3 rounded mt-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, \"Hey, this is still a Draft \\uD83D\\uDE04\"), __jsx(\"div\", {\n    className: \"my-24 p-2 text-center \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"text-black font-medium text-3xl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, post.title), __jsx(DateFormater, {\n    dateStr: post.date,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    className: \"flex justify-center items-center mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"mr-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 15\n    }\n  }, post.author.name), __jsx(\"img\", {\n    className: \"inline-block rounded-full w-12 h-12 object-cover border-2 border-teal-800 p-1\",\n    src: post.author.picture,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 15\n    }\n  }))), __jsx(PostBody, {\n    markdown: post.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }))));\n}\nexport async function getStaticProps({\n  params\n}) {\n  const post = getPostBySlug(params.slug, ['title', 'date', 'slug', 'content', 'author', 'ogImage', 'isPublished']);\n  const content = await md2html(post.content || '');\n  return {\n    props: {\n      post: _objectSpread(_objectSpread({}, post), {}, {\n        content\n      })\n    }\n  };\n}\nexport async function getStaticPaths() {\n  const posts = getAllPosts(['slug']);\n  return {\n    paths: posts.map(post => {\n      return {\n        params: {\n          slug: post.slug\n        }\n      };\n    }),\n    fallback: false\n  };\n}","map":{"version":3,"sources":["/Users/txb/PersonalProject/portfolio/tepy.dev/src/pages/writing/[slug].js"],"names":["Head","getPostBySlug","getAllPosts","md2html","Layout","DateFormater","PostBody","SocialMeta","Post","post","console","log","ogImage","title","url","isPublished","date","author","name","picture","content","getStaticProps","params","slug","props","getStaticPaths","posts","paths","map","fallback"],"mappings":"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","sourcesContent":["import Head from 'next/head';\nimport { getPostBySlug, getAllPosts } from '../../../lib/api';\nimport md2html from '../../../lib/md2html';\nimport Layout from '../../components/Layout';\nimport DateFormater from '../../components/DateFormater';\nimport PostBody from '../../components/PostBody';\nimport SocialMeta from '../../components/meta';\n\nexport default function Post({ post }) {\n  console.log(post.ogImage);\n  return (\n    <Layout>\n      <SocialMeta\n        title={`${post.title} | Tepy Thai's Blog`}\n        image={post.ogImage.url}\n        keywords={`programming journey, tepythai, dev journey, dev story`}\n        description={post.title}\n      />\n      <article>\n        <Head>\n          <title>{post.title} | Tepy Thai</title>\n          <meta property=\"og:image\" content={post.ogImage.url} />\n        </Head>\n        <div className=\"max-w-post mx-auto\">\n          {!post.isPublished && (\n            <div className=\"text-center bg-red-600 text-white p-3 rounded mt-8\">\n              Hey, this is still a Draft ðŸ˜„\n            </div>\n          )}\n          <div className=\"my-24 p-2 text-center \">\n            <div className=\"text-black font-medium text-3xl\">{post.title}</div>\n            <DateFormater dateStr={post.date} />\n            <div className=\"flex justify-center items-center mt-2\">\n              <div className=\"mr-6\">{post.author.name}</div>\n              <img\n                className=\"inline-block rounded-full w-12 h-12 object-cover border-2 border-teal-800 p-1\"\n                src={post.author.picture}\n              />\n            </div>\n          </div>\n          <PostBody markdown={post.content} />\n        </div>\n      </article>\n    </Layout>\n  );\n}\n\nexport async function getStaticProps({ params }) {\n  const post = getPostBySlug(params.slug, [\n    'title',\n    'date',\n    'slug',\n    'content',\n    'author',\n    'ogImage',\n    'isPublished',\n  ]);\n  const content = await md2html(post.content || '');\n  return {\n    props: {\n      post: {\n        ...post,\n        content,\n      },\n    },\n  };\n}\n\nexport async function getStaticPaths() {\n  const posts = getAllPosts(['slug']);\n\n  return {\n    paths: posts.map((post) => {\n      return {\n        params: {\n          slug: post.slug,\n        },\n      };\n    }),\n    fallback: false,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}