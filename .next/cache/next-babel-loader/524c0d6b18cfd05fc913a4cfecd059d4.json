{"ast":null,"code":"import { join } from 'path';\nimport { readdirSync, readFileSync } from 'fs';\nimport matter from 'gray-matter';\nconst postsDirectory = join(process.cwd(), '_posts');\nexport function getPostSlugs() {\n  return readdirSync(postsDirectory);\n}\nexport function getPostBySlug(slug, fields = []) {\n  const realSlug = slug.replace(/\\.md$/, '');\n  const fullPath = join(postsDirectory, `${realSlug}.md`);\n  const fileContents = readFileSync(fullPath, 'utf8');\n  const {\n    data,\n    content\n  } = matter(fileContents);\n  const items = {};\n  fields.forEach(field => {\n    if (field === 'slug') {\n      items[field] = realSlug;\n    }\n\n    if (field === 'content') {\n      items[field] = content;\n    }\n\n    if (data[field]) {\n      items[field] = data[field];\n    }\n  });\n  return items;\n}\nexport function getAllPosts(fields = []) {\n  const slugs = getPostSlugs();\n  const posts = slugs.map(slug => getPostBySlug(slug, fields)).sort((post1, post2) => post1.date > post2.data ? '-1' : '1');\n  return posts;\n}","map":{"version":3,"sources":["/Users/txb/PersonalProject/portfolio/tepy.dev/lib/api.js"],"names":["join","readdirSync","readFileSync","matter","postsDirectory","process","cwd","getPostSlugs","getPostBySlug","slug","fields","realSlug","replace","fullPath","fileContents","data","content","items","forEach","field","getAllPosts","slugs","posts","map","sort","post1","post2","date"],"mappings":"AAAA,SAASA,IAAT,QAAqB,MAArB;AACA,SAASC,WAAT,EAAsBC,YAAtB,QAA0C,IAA1C;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,MAAMC,cAAc,GAAGJ,IAAI,CAACK,OAAO,CAACC,GAAR,EAAD,EAAgB,QAAhB,CAA3B;AAEA,OAAO,SAASC,YAAT,GAAwB;AAC7B,SAAON,WAAW,CAACG,cAAD,CAAlB;AACD;AAED,OAAO,SAASI,aAAT,CAAuBC,IAAvB,EAA6BC,MAAM,GAAG,EAAtC,EAA0C;AAC/C,QAAMC,QAAQ,GAAGF,IAAI,CAACG,OAAL,CAAa,OAAb,EAAsB,EAAtB,CAAjB;AACA,QAAMC,QAAQ,GAAGb,IAAI,CAACI,cAAD,EAAkB,GAAEO,QAAS,KAA7B,CAArB;AACA,QAAMG,YAAY,GAAGZ,YAAY,CAACW,QAAD,EAAW,MAAX,CAAjC;AACA,QAAM;AAAEE,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBb,MAAM,CAACW,YAAD,CAAhC;AAEA,QAAMG,KAAK,GAAG,EAAd;AAEAP,EAAAA,MAAM,CAACQ,OAAP,CAAgBC,KAAD,IAAW;AACxB,QAAIA,KAAK,KAAK,MAAd,EAAsB;AACpBF,MAAAA,KAAK,CAACE,KAAD,CAAL,GAAeR,QAAf;AACD;;AACD,QAAIQ,KAAK,KAAK,SAAd,EAAyB;AACvBF,MAAAA,KAAK,CAACE,KAAD,CAAL,GAAeH,OAAf;AACD;;AACD,QAAID,IAAI,CAACI,KAAD,CAAR,EAAiB;AACfF,MAAAA,KAAK,CAACE,KAAD,CAAL,GAAeJ,IAAI,CAACI,KAAD,CAAnB;AACD;AACF,GAVD;AAYA,SAAOF,KAAP;AACD;AAED,OAAO,SAASG,WAAT,CAAqBV,MAAM,GAAG,EAA9B,EAAkC;AACvC,QAAMW,KAAK,GAAGd,YAAY,EAA1B;AACA,QAAMe,KAAK,GAAGD,KAAK,CAChBE,GADW,CACNd,IAAD,IAAUD,aAAa,CAACC,IAAD,EAAOC,MAAP,CADhB,EAEXc,IAFW,CAEN,CAACC,KAAD,EAAQC,KAAR,KAAmBD,KAAK,CAACE,IAAN,GAAaD,KAAK,CAACX,IAAnB,GAA0B,IAA1B,GAAiC,GAF9C,CAAd;AAGA,SAAOO,KAAP;AACD","sourcesContent":["import { join } from 'path';\nimport { readdirSync, readFileSync } from 'fs';\nimport matter from 'gray-matter';\nconst postsDirectory = join(process.cwd(), '_posts');\n\nexport function getPostSlugs() {\n  return readdirSync(postsDirectory);\n}\n\nexport function getPostBySlug(slug, fields = []) {\n  const realSlug = slug.replace(/\\.md$/, '');\n  const fullPath = join(postsDirectory, `${realSlug}.md`);\n  const fileContents = readFileSync(fullPath, 'utf8');\n  const { data, content } = matter(fileContents);\n\n  const items = {};\n\n  fields.forEach((field) => {\n    if (field === 'slug') {\n      items[field] = realSlug;\n    }\n    if (field === 'content') {\n      items[field] = content;\n    }\n    if (data[field]) {\n      items[field] = data[field];\n    }\n  });\n\n  return items;\n}\n\nexport function getAllPosts(fields = []) {\n  const slugs = getPostSlugs();\n  const posts = slugs\n    .map((slug) => getPostBySlug(slug, fields))\n    .sort((post1, post2) => (post1.date > post2.data ? '-1' : '1'));\n  return posts;\n}\n"]},"metadata":{},"sourceType":"module"}